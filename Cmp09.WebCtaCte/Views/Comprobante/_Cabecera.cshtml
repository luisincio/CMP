@using Cmp02.Entities;
@using Cmp01.Utilities;
@model Tb_Comprobantecabecera

<script>
    $(document).ready(function () {
        if ("@Model.Id_Comprobante" != 0) {
            $("#frmCabecera").find("#Id_Comprobante").val("@Model.Id_Comprobante");
            $("#frmDetalle").find("#vId").val("@Model.Id_Comprobante");
            $("#Monto, #LblMonto").val("@Model.Monto")
            $("#Igv, #LblIgv").val("@Model.Igv")
            $("#Descuento, #LblDescuento").val("@Model.Descuento")
            $("#Total, #LblTotal").val("@Model.Total")
        }

        $("#frmCabecera").find("#btnGrabar").on("click", function () {
            FullMsg.Confirm("¿Seguro de grabar el comprobante?", function (a) {
                //a && ($("#Id_Sitio_Origen").val(parseInt($("#Id_Sitio_Origen").val()) > 0 ? $("#Id_Sitio_Origen").val() : $("#Id_Sitio_Destino").val()), ($("#Opcional").val($("#Serie option:selected").text()), $("#frmCabecera").submit()))
                if (a)
                {
                    if ($("#Id_Sitio_Origen").val(parseInt($("#Id_Sitio_Origen").val()) == 0)) {
                        $("#Id_Sitio_Origen").val($("#Id_Sitio_Destino").val());
                    }
                    $("#Opcional").val($("#Serie option:selected").text());
                    $("#frmCabecera").submit();
                }
            });
        });
        $("#btnConcepto").on("click", function () { $.get(FullPathSrv + "Servicios/BuscarModal", function (a) { modal = FullMsg.Modal({ title: "Agregar Articulo", message: a, buttons: [{ label: "Guardar", className: "btn-primary", callback: function () { return Aceptar(), !1 } }, { label: "Cancelar", className: "btn-default", callback: function () { modal.modal("hide") } }] }), modal.modal("show") }) }),
            //$("#btnBuscarRuc").on("click", function () { $.get(FullPathSrv + "Comprobante/ObtenerEmpresa", { vRuc: $("#RUC").val() }, function (a) { $("#Razonsocial").val(a.Razon_Social), $("#Id_Clientepagador").val(a.Id_Persona) }) }),
            //$("#btnBuscarDNI").on("click", function () { $.get(FullPathSrv + "Comprobante/ObtenerCliente", { vDni: $("#DNI").val() }, function (a) { $("#Colegiatura").val(a.Colegiado), $("#Apellidos_Colegiado").val(a.Apellido_Paterno + " " + a.Apellido_Materno), $("#Nombres_Colegiado").val(a.Nombres), $("#Id_Colegiado").val(a.Id_Persona), $("#Estado").val(a.Estado_Actual) }) })
            $("#btnBuscarDNI").on("click", function () { $.get(FullPathSrv + "Comprobante/Listar_Persona", function (a) { modal = FullMsg.Modal({ title: "Buscar Persona", message: a, buttons: [{ label: "Aceptar", className: "btn-primary", callback: function () { return fnSeleccionoDoctor(), !1 } }, { label: "Cancelar", className: "btn-default", callback: function () { modal.modal("hide") } }] }), modal.modal("show") }) }),
            $("#btnBuscarRuc").on("click", function () { $.get(FullPathSrv + "Comprobante/Listar_Empresa", function (a) { modal = FullMsg.Modal({ title: "Buscar Empresa", message: a, buttons: [{ label: "Aceptar", className: "btn-primary", callback: function () { return fnSeleccionoDoctor(), !1 } }, { label: "Cancelar", className: "btn-default", callback: function () { modal.modal("hide") } }] }), modal.modal("show") }) }),


        @*$("#Tipo_Documentosunat").change(function ()
        {
            $("#DivClientePagador").hide(), "@Convert.ToInt32(EnumTipoDocSunat.FACTURA)" == $("#Tipo_Documentosunat").val() && $("#DivClientePagador").show()
        }),*@

        $("#Tipo_Documentosunat").on("change", function () {
            $("#DivClientePagador").hide(), "@Convert.ToInt32(EnumTipoDocSunat.FACTURA)" == $("#Tipo_Documentosunat").val() && $("#DivClientePagador").show();
            $("#Serie").empty();
            $("#Nro_Documento").val("");


            $.getJSON(FullPathSrv + "Comprobante/ListarSerie?vTipoDocumento=" + $("#Tipo_Documentosunat").val(), function (data) {
                $.each(data, function (id, value) {
                    $("#Serie").append('<option value="' + value.Serie + '">' + value.Id_Documento_GP + '</option>');
                    if (id == 0) {
                        if ("@Model.Id_Comprobante" != 0) {
                            $("#Nro_Documento").val("@Model.Nro_Documento");
                        }
                        else {
                            $.getJSON(FullPathSrv + "Comprobante/TraerNumero?vTipoDocumento=" + $("#Tipo_Documentosunat").val() + "&vSerie=" + value.Serie, function (data) { $("#Nro_Documento").val(data); });
                        }
                    }
                });
                if ("@Model.Id_Comprobante" != 0) {
                    $("#Serie").attr("disabled", "disabled");
                    $("#Serie").val("@Model.Serie");
                    //$("#Nro_Documento").val("@Model.Nro_Documento");
                }
            });
        });

        $("#Serie").change(function () {
            $("#Nro_Documento").val("");
            $.getJSON(FullPathSrv + "Comprobante/TraerNumero?vTipoDocumento=" + $("#Tipo_Documentosunat").val() + "&vSerie=" + $("#Serie").val(), function (data) {
                $("#Nro_Documento").val(data);
            });
        });

        $("#Tipo_Documentosunat").change();

    });

    function dedos() {
        fnWindowPopup("@Url.Action("ImprimirFactura", "Reportes", new { vId = Model.Id_Comprobante })", "700", "520");
    }
</script>

@Html.HiddenFor(m => m.Id_Clientepagador)
@Html.HiddenFor(m => m.Id_Colegiado)
@Html.HiddenFor(m => m.Id_Sitio_Origen)
@Html.HiddenFor(m => m.Nrodocumento_Gp)
@Html.HiddenFor(m => m.Id_Comprobante)
@Html.HiddenFor(m => m.Id_EstadoComprobante)
@Html.HiddenFor(m => m.Monto)
@Html.HiddenFor(m => m.Igv)
@Html.HiddenFor(m => m.Descuento)
@Html.HiddenFor(m => m.Total)
@Html.HiddenFor(m => m.Opcional)
@Html.HiddenFor(m => m.Id_Sitio_Destino)
@*@Html.DropDownListFor(m => m.Id_Sitio_Destino, new SelectList((List<Tb_Maestras>)ViewBag.LstSitio, "ID_MAESTRAS", "DESCRIPCION", Model.Id_Sitio_Destino), "SELECCIONE", new { @class = "form-control input-sm text-uppercase", @disabled = "disabled" })*@


<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Tipo_Documentosunat" class="control-label col-md-3 input-sm">Tipo Documento:</label>
            <div class="col-md-9">
                @if (Model.Id_Comprobante > 0)
                {
                    @Html.DropDownListFor(m => m.Tipo_Documentosunat, new SelectList((List<Tb_Maestras>)ViewBag.LstDocumento, "ID_MAESTRAS", "DESCRIPCION", Model.Tipo_Documentosunat), "SELECCIONE", new { @class = "form-control input-sm text-uppercase", @disabled = "disabled" })
                }
                else
                {
                    @Html.DropDownListFor(m => m.Tipo_Documentosunat, new SelectList((List<Tb_Maestras>)ViewBag.LstDocumento, "ID_MAESTRAS", "DESCRIPCION", Model.Tipo_Documentosunat), "SELECCIONE", new { @class = "form-control input-sm text-uppercase" })
                }
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Nro_Documento" class="control-label col-md-3 input-sm">Nro Documento:</label>
            <div class="col-md-4">
                <select name="Serie" id="Serie" class="form-control input-sm text-uppercase"> </select>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(m => m.Nro_Documento, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
            </div>
        </div>
    </div>
</div>

@if (Model.Tipo_Documentosunat == (int)EnumTipoDocSunat.FACTURA)
{
    <div class="row" id="DivClientePagador">
        <div class="col-md-6">
            <div class="form-group">
                <label for="RUC" class="control-label col-md-3 input-sm">Cliente Pagador:</label>
                <div class="col-md-9">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.RUC, new { @class = "form-control input-sm text-uppercase", @maxlength = "11" })
                        <span class="input-group-btn">
                            <button type="button" id="btnBuscarRuc" class="btn btn-default btn-sm">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Razonsocial" class="control-label col-md-3 input-sm">Razon Social:</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Razonsocial, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row" id="DivClientePagador" hidden="hidden">
        <div class="col-md-6">
            <div class="form-group">
                <label for="RUC" class="control-label col-md-3 input-sm">Ruc:</label>
                <div class="col-md-9">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.RUC, new { @class = "form-control input-sm text-uppercase", @maxlength = "11" })
                        <span class="input-group-btn">
                            <button type="button" id="btnBuscarRuc" class="btn btn-default btn-sm">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Razonsocial" class="control-label col-md-3 input-sm">Razon Social:</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Razonsocial, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="DNI" class="control-label col-md-3 input-sm">Cliente:</label>
            <div class="col-md-9">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.DNI, new { @class = "form-control input-sm text-uppercase", @maxlength = "10" })
                    <span class="input-group-btn">
                        <button type="button" id="btnBuscarDNI" class="btn btn-default btn-sm">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Colegiatura" class="control-label col-md-3 input-sm">Nro. CMP:</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Colegiatura, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Nombres_Colegiado" class="control-label col-md-3 input-sm">Nombres:</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Nombres_Colegiado, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Apellidos_Colegiado" class="control-label col-md-3 input-sm">Apellidos:</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Apellidos_Colegiado, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Estado" class="control-label col-md-3 input-sm">Estado:</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Estado, new { @class = "form-control input-sm text-uppercase", @readonly = "readonly" })
            </div>
        </div>
    </div>
    <div class="col-md-6">

    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Id_Moneda" class="control-label col-md-3 input-sm">Moneda:</label>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.Id_Moneda, new SelectList((List<Tb_Maestras>)ViewBag.LstMoneda, "ID_MAESTRAS", "DESCRIPCION", Model.Id_Moneda), "SELECCIONE", new { @class = "form-control input-sm text-uppercase" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Id_Sitio" class="control-label col-md-3 input-sm">Sitio:</label>
            <div class="col-md-9">
                @*@Html.DropDownListFor(m => m.Id_Sitio_Destino, new SelectList((List<Tb_Maestras>)ViewBag.LstSitio, "ID_MAESTRAS", "DESCRIPCION", Model.Id_Sitio_Destino), "SELECCIONE", new { @class = "form-control input-sm text-uppercase", @disabled = "disabled" })*@
                @Html.DropDownList("Id_Sitio", new SelectList((List<Tb_Maestras>)ViewBag.LstSitio, "ID_MAESTRAS", "DESCRIPCION", Model.Id_Sitio_Destino), "SELECCIONE", new { @class = "form-control input-sm text-uppercase", @disabled = "disabled" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Id_CondicionPago" class="control-label col-md-3 input-sm">Condición de Pago:</label>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.Id_CondicionPago, new SelectList((List<Tb_Maestras>)ViewBag.LstCondicionPago, "VALOR1", "DESCRIPCION", Model.Id_CondicionPago), "SELECCIONE", new { @class = "form-control input-sm text-uppercase" })
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label for="Id_Tipo_Pago" class="control-label col-md-3 input-sm">Forma de Pago:</label>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.Id_Tipo_Pago, new SelectList((List<Tb_Maestras>)ViewBag.LstPago, "ID_MAESTRAS", "DESCRIPCION", Model.Id_Tipo_Pago), "SELECCIONE", new { @class = "form-control input-sm text-uppercase" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <label for="Observacion" class="control-label col-md-1 input-sm" style="width:12.3%;">Observación:</label>
            <div class="col-md-8" style="width:87.7%;">
                @Html.TextAreaFor(m => m.Observacion, new { @class = "form-control input-sm noresize input-sm text-uppercase" })
            </div>
        </div>
    </div>
</div>

<br />
<div class="row">
    <div class="col-md-6">

    </div>
    <div class="col-md-6 text-right" id="DivBotonera">
        <button type="button" id="btnGrabar" class="btn btn-primary btn-sm">Grabar Comprobante</button>
        @if (Model.Id_Comprobante != 0)
        {
            <button type="button" id="btnConcepto" class="btn btn-primary btn-sm">Agregar Detalle</button>

            if (Model.Detalle != null && Model.Detalle.Any())
            {
                @*<button type="button" hidden="hidden" id="btnImprimir" class="btn btn-info btn-sm">Imprimir</button>*@
                <button type="button" id="btnProcesar" class="btn btn-info btn-sm" onclick="fnProcesar()">Procesar</button>
                @*<button type="button" id="btnEmitir" class="btn btn-info btn-sm" onclick="fnEmitir()">Emitir</button>*@
            }

        }
    </div>
</div>